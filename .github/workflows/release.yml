name: "Plugin CI/CD"

on:
  release:
    types: [created]

permissions:
  contents: write
    
jobs:
  plugin:
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Set plugin version
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}"
          & set-version.ps1 $version

      - name: Commit version change
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          $changes = $(git status -s)
          if ($changes) {
            git add CMakeLists.txt
            git commit -m "chore: bump version to ${{ github.ref_name }}"
            git push origin main
          } else {
            echo "No changes to commit"
          }

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: x86
 
      - name: Compile plugin
        run: |
          cmake . --preset MP-Release
          cmake --build --preset MP-Release

      - name: Find plugin
        run: |
          $plugin_dll = Get-ChildItem *.dll -Recurse | Select-Object -First 1 -ExpandProperty FullName
          $plugin_dll = $plugin_dll.Replace((Resolve-Path ".").Path + "\", "")
          $plugin_dll = $plugin_dll.Replace("\", "/")
          echo "plugin_dll=$plugin_dll" >> $env:GITHUB_ENV
          echo "Found plugin path: $plugin_dll"

      - name: Generate changelog
        id: changelog
        run: |
          $lastTag = git describe --tags --abbrev=0 2>$null
          if ([string]::IsNullOrEmpty($lastTag)) {
            $body = "- Initial release"
          } else {
            $body = git log --pretty=format:"- %s" "$lastTag..HEAD"
          }
          echo "body=$body" >> $env:GITHUB_OUTPUT

      - name: Upload plugin
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.changelog.outputs.body }}
          files: ${{ env.plugin_dll }}
